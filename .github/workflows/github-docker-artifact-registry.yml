# 1. Create service account
#.   * Service Account Token Creator
#.   * Artifact Registry Writer
# 2. Generate service account key
#.   * In GitHub project -> Settings -> Secrets -> Actions -> New Repository Secret
#.     Name: GCP_CREDENTIALS
#.     Value: key.json contents
# 3. Create repo in artifact repository
#.   * Name: $env.REPOSITORY below
#.   * Region: $env.GAR_LOCATION below

name: Docker build and push to Artifact Registry

on:
  push:
    branches:
      - main
      - github-action
      - gcp-workflow-update

env:
  PROJECT_ID: ece461-379719
  GAR_LOCATION: us-central1
  REPOSITORY: express-api-image
  IMAGE: main
  SERVICE: express-api

jobs:
  login-build-push:
    name: Docker login, build, and push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Create .env file
      run: |-
        echo "GITHUB_TOKEN=${{ secrets.TOKEN }}" > .env ; cat .env

    - name: 'Docker build'
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          . \
          -f docker/API/Dockerfile
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.6.0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS_ENCODED }}'

    - uses: 'docker/login-action@v1'
      name: 'Docker login'
      with:
        registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
        username: _json_key_base64
        password: '${{ secrets.GCP_CREDENTIALS_ENCODED }}'

    - name: 'Docker push'
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
    - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
